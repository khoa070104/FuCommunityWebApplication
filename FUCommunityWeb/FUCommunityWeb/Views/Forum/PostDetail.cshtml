@using System.Security.Claims
@model FuCommunityWebModels.ViewModels.PostVM;

@{
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var isPostOwner = Model.Post.UserID == currentUserId;
}

<body>
    <div class="container mt-4 forum-detail">
        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@Model.Post.Title</h5>
                        <div class="card-text">
                            @Html.Raw(System.Net.WebUtility.HtmlDecode(Model.Post.Content))
                        </div>
                        <img src="@Model.Post.PostImage" /></br>   
                        <p>Votes:<strong>@Model.VoteCount</strong> </p>
                        @if (!isPostOwner)
                        {
                            <button class="btn vote-btn" data-post-id="@Model.Post.PostID" data-point="1">
                                <i class="fas fa-thumbs-up"></i> Vote
                            </button>
                        }
                    </div>
                </div>
                <div class="suggestions mt-3">
                    <form asp-action="Comment" asp-controller="Forum">
                        <label for="commentContent" class="form-label">Share your idea:</label>
                        <textarea asp-for="@Model.Comment.Content" class="form-control" id="editor" rows="3" placeholder=""></textarea>
                        <input type="hidden" asp-for="@Model.Comment.PostID" value="@Model.Post.PostID" />
                        <button type="submit" class="btn btn-secondary mt-2">Comment</button>
                    </form>
                </div>
                @if (Model.Comments != null && Model.Comments.Any())
                {
                    foreach (var comment in Model.Comments)
                    {
                        var user = Model.Users.FirstOrDefault(u => u.User.Id == comment.UserID);
                        <div class="card card-body card-comment mt-3">
                            <div class="d-flex align-items-center mb-2">
                                <a href="#" class="user-picture me-2">
                                    <img src="@user?.User.AvatarImage" alt="@user?.User.FullName's Picture"
                                         style="width: 40px; height: 40px; border-radius: 50%;" />
                                </a>
                                <div>
                                    <strong>@user?.User.FullName</strong>
                                    <p class="mb-0 text-muted" style="font-size: 0.9rem;">
                                        @comment.CreatedDate.ToString("g")
                                    </p>
                                </div>
                                <div class="ms-auto dropdown">
                                    <button class="btn-link text-muted" id="settingsDropdown"
                                            data-bs-toggle="dropdown" aria-expanded="false"
                                            style="background: none; border: none; box-shadow: none;">
                                        <i class="fas fa-ellipsis-v"></i>
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="settingsDropdown">
                                        <li>
                                            <a class="dropdown-item edit-comment"
                                               href="#"
                                               data-bs-toggle="modal"
                                               data-bs-target="#editModal"
                                               data-comment-id="@comment.CommentID"
                                               data-post-id="@Model.Post.PostID"
                                               data-comment-content="@comment.Content">
                                                Edit
                                            </a>

                                        </li>
                                        <li>
                                            <a class="dropdown-item delete-comment"
                                               href="#"
                                               data-bs-toggle="modal"
                                               data-bs-target="#deleteModal"
                                               data-comment-id="@comment.CommentID">
                                                Delete
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <p>@comment.Content</p>
                        </div>
                    }
                }

                else

                {
                    <p class="text-muted mt-3">Chưa có bình luận nào.</p>
                }
            </div>
            <div class="col-md-4 text-center">
                <div class="user-info">
                    <img src="/img/Logo_FunnyCode.jpg" alt="Profile Picture" class="profile-pic mb-2">
                    <p>Golanginya</p>
                    <p><i class="fas fa-trophy"></i> 125 [ 8 ]</p>
                    <div>
                        <a href="#"><i class="fab fa-github fa-lg me-2"></i></a>
                        <a href="#"><i class="fab fa-instagram fa-lg me-2"></i></a>
                        <a href="#"><i class="fab fa-facebook fa-lg"></i></a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Your Comment</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form asp-controller="Forum" asp-action="EditComment" method="post" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label for="editContent" class="form-label">Content</label>
                            <textarea asp-for="Post.Content" class="form-control" id="editContent"></textarea>
                        </div>
                        <input type="hidden" name="Comment.CommentID" value="" />
                        <input type="hidden" name="Post.PostID" value="" />
                        <div class="modal-footer">
                            <button type="button" class="btn-cancel" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn">Save changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this comment?
                </div>
                <form asp-controller="Forum" asp-action="DeleteComment">
                    <input type="hidden" name="Comment.CommentID" value="" />
                    <input type="hidden" name="Post.PostID" value="" />
                    <div class="modal-footer">
                        <button type="button" class="btn-cancel" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn">Delete</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

</body>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const deleteModal = document.getElementById('deleteModal');

            deleteModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget; 
                if (!button) return; 

                const commentId = button.getAttribute('data-comment-id'); 
                const commentIdInput = deleteModal.querySelector('input[name="Comment.CommentID"]');
                const postIdInput = deleteModal.querySelector('input[name="Post.PostID"]');

                const urlParams = new URLSearchParams(window.location.search);
                const postId = urlParams.get('postId');

                if (commentIdInput) commentIdInput.value = commentId; 
                if (postIdInput) postIdInput.value = postId; 
                console.log('Comment ID:', commentId);
                console.log('Post ID:', postId);
            });
        });

    </script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const voteButtons = document.querySelectorAll('.vote-btn');

            voteButtons.forEach(button => {
                const postId = button.getAttribute('data-post-id');
                const voteCountElement = document.querySelector('p strong');

                fetch(`/Forum/CheckVote?postId=${postId}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.hasVoted) {
                            button.classList.add('voted'); 
                            button.style.backgroundColor = 'gray'; 
                            button.setAttribute('data-point', '0'); 
                            button.innerHTML = '<i class="fas fa-thumbs-up"></i> Unvote'; 
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });

                button.addEventListener('click', function () {
                    const point = parseInt(button.getAttribute('data-point'));
                    const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                    const data = {
                        Post: { PostID: postId },
                        Point: { PointValue: point } 
                    };

                    fetch('/Forum/Vote', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': token
                        },
                        body: JSON.stringify(data)
                    })
                        .then(response => {
                            if (response.ok) {
                                if (point === 1) {
                                    button.classList.add('voted'); 
                                    button.style.backgroundColor = 'gray'; 
                                    button.setAttribute('data-point', '0'); 
                                    button.innerHTML = '<i class="fas fa-thumbs-down"></i> Unvote'; 
                                    voteCountElement.textContent = parseInt(voteCountElement.textContent) + 1;
                                } else {
                                    button.classList.remove('voted'); 
                                    button.style.backgroundColor = ''; 
                                    button.setAttribute('data-point', '1'); 
                                    button.innerHTML = '<i class="fas fa-thumbs-up"></i> Vote'; 
                                    voteCountElement.textContent = parseInt(voteCountElement.textContent) - 1;
                                }
                            } else {
                                console.error('Failed to vote. Please try again.');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                        });
                });
            });
        });

    </script>
}
