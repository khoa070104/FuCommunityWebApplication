@using FuCommunityWebModels.ViewModels
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@using FUCommunityWeb.Components.Shared
@attribute [Authorize(Roles = "Admin")]
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Admin Dashboard - FU Community</PageTitle>

<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous">

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>

<!-- Font Awesome for Icons -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<link rel="stylesheet" href="/src/webapp/css/style.css">

<style>
    /* CSS cũ từ Style.css - khôi phục thiết kế ban đầu */
    .admin .card {
        border: none;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border-radius: 15px;
    }

    .admin .card:hover {
        transform: scale(1.05);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
    }

    .admin .card-body {
        padding: 20px;
        text-align: left; /* Khôi phục text-align: left từ CSS cũ */
    }

    .admin .card-header-value {
        font-size: 2.5rem;
        font-weight: bold;
        color: #20B486;
    }

    .card-header-value a {
        text-decoration: none;
        color: #20B486;
    }

    .card-header-value a:hover {
        color: #1A9B73;
    }

    /* Layout cũ */
    .admin-layout {
        position: relative;
        display: flex;
        min-height: calc(100vh - 140px);
        background-color: #f8f9fa;
    }

    .admin-content {
        margin-left: 250px;
        padding: 20px;
        width: calc(100% - 250px);
    }

    /* Khôi phục dashboard header cũ */
    .admin .dashboard-header {
        font-weight: bold;
        color: #20B486;
        margin-bottom: 30px;
        font-style: italic;
        font-size: 2.5rem;
        padding-bottom: 30px;
    }

    /* Khôi phục revenue chart styling cũ */
    .admin .revenue-chart {
        margin-top: 40px;
    }
</style>

<div class="admin admin-layout">
    <!-- Sidebar -->
    <AdminSidebar ActivePage="dashboard" />

    <!-- Main Content -->
    <div class="admin-content">
        <!-- Dashboard Header với style cũ -->
        <h1 class="dashboard-header">Dashboard</h1>

        <!-- Cards Row với style cũ -->
        <div class="row g-4 mb-4">
            <div class="col-md-3">
                <div class="card">
                    <div class="card-body">
                        <p class="text-muted">Total Users</p>
                        <h2 class="card-header-value">
                            <a href="/admin/ManageUser">@DashboardData.TotalUsers</a>
                        </h2>
                        <p class="text-muted">Users</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card">
                    <div class="card-body">
                        <p class="text-muted">Total Courses</p>
                        <h2 class="card-header-value">
                            <a href="/admin/BlazorManageCourse">@DashboardData.TotalCourses</a>
                        </h2>
                        <p class="text-muted">Courses</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card">
                    <div class="card-body">
                        <p class="text-muted">Total Posts</p>
                        <h2 class="card-header-value">
                            <a href="/admin/ManageForumCategory">@DashboardData.TotalPosts</a>
                        </h2>
                        <p class="text-muted">Posts</p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card">
                    <div class="card-body">
                        <p class="text-muted">Total Amount</p>
                        <h2 class="card-header-value">
                            <a href="/admin/ManagePayment">@DashboardData.TotalAmount</a>
                        </h2>
                        <p class="text-muted">VND</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Statistics Section với style cũ -->
        <div class="revenue-chart">
            <div class="d-flex justify-content-between align-items-center">
                <h4>Statistics of User Registrations</h4>
            </div>
            <!-- Placeholder for Chart -->
            <canvas id="revenueChart" width="400" height="150"></canvas>
        </div>
    </div>
</div>

@code {
    [Parameter] public DashboardVM DashboardData { get; set; } = new();
    private string currentUserEmail = "admin@example.com";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == true)
        {
            currentUserEmail = authState.User.Identity.Name ?? "admin@example.com";
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InitializeChart();
        }
    }

    private async Task InitializeChart()
    {
        var currentMonth = DateTime.Now.Month;
        var currentYear = DateTime.Now.Year;
        var labels = new List<string>();

        for (int i = 11; i >= 0; i--)
        {
            var month = (currentMonth - i + 11) % 12 + 1;
            var year = currentMonth - i <= 0 ? currentYear - 1 : currentYear;
            labels.Add($"{month:D2}/{year}");
        }

        await JSRuntime.InvokeVoidAsync("initializeChart", labels.ToArray(), DashboardData.MonthlyUserRegistrations);
    }
}

<script>
    window.initializeChart = (labels, data) => {
        const ctx = document.getElementById('revenueChart').getContext('2d');
        const revenueChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [
                    {
                        label: 'Registered Users',
                        data: data,
                        borderColor: 'rgba(0, 123, 255, 1)',
                        backgroundColor: 'rgba(0, 123, 255, 0.2)',
                        fill: true,
                        tension: 0.1
                    }
                ]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true,
                        min: 0,
                        max: 100,
                        title: {
                            display: true,
                            text: 'Number of Users'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Months'
                        }
                    }
                }
            }
        });
    };
</script>
